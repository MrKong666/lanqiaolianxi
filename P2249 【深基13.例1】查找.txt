cpp：
#include<iostream>
#include<cstring>
#include<algorithm>
#include<bits/stdc++.h> 
using namespace std;
const int N=1e6+10;
int n,m;
int v[N];
signed main()
{
    cin>>m>>n;
    for(int i=0;i<m;i++){
    	cin>>v[i];
	}
	for(int i=0;i<n;i++){
		int a;
		cin>>a;
		int l=-1,r=m;
		while(l+1<r){
			int mid=(l+r)>>1;
			if(v[mid]<a)l=mid;
			else r=mid;
		}
		if(v[r]==a)cout<<r+1<<" ";
		else cout<<-1<<" ";
	}
    return 0;
}
py： 
import sys
from cmath import inf, sqrt
from functools import lru_cache

from sys import stdin
from collections import deque
from collections import defaultdict
sys.setrecursionlimit(1000000000)
n,m=list(map(int,input().split()))
v=list(map(int,input().strip().split(" ")))
v1=list(map(int,input().strip().split(" ")))
for i in v1:
    l=-1
    r=n
    while(l+1<r):
        mid=(l+r)//2
        if(v[mid]<i):l=mid
        else:r=mid
    if(r<n and v[r]==i):r=r+1
    else:r=-1
    print(r,end=" ")









