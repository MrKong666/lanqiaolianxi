cpp：
#include<bits/stdc++.h>
using namespace std;
//#define int long long
typedef pair<int,int> PII; 
using ll=long long;
 
const int N=2200,mod=1e5+3;
int n,m,k;
int zuo,you;
ll ans=0;
int lubiao;
int v[N][N];
int d[N][N]; 
bool st[N][N];
int dis[4][2]={1,0,-1,0,0,1,0,-1};
int x2,y2;
int bfs(int mid){
	int cnt=1;
	queue<array<int,2>>q;
	q.push({x2,y2});
	memset(st,0,sizeof st);
	st[x2][y2]=1;
	while(q.size()){
		auto cur=q.front();q.pop();
		for(int i=0;i<4;i++){
			int nx=cur[0]+dis[i][0],ny=cur[1]+dis[i][1];
			if(nx<0||ny<0||nx>=m||ny>=n)continue;
			if(st[nx][ny])continue;
			if(abs(v[cur[0]][cur[1]]-v[nx][ny])>mid)continue;
			st[nx][ny]=1;
			q.push({nx,ny});
			if(d[nx][ny])cnt++;
			if(cnt==lubiao)return 1;
		}
	}


	return 0;
}
signed main()
{	
 	 cin>>m>>n;
	  for(int i=0;i<m;i++){
	  	for(int j=0;j<n;j++){
	  		cin>>v[i][j];
		  }
	  } 
	  for(int i=0;i<m;i++){
	  	for(int j=0;j<n;j++){
	  		cin>>d[i][j];
	  		lubiao+=d[i][j];
	  		if(d[i][j]){
	  			x2=i;y2=j;
			  }
		  }
	  } 
	   
 	 int l=-1,r=1e9+10;
 	 while(l+1<r){
 	 	int mid=(l+r)>>1;
 	 	if(bfs(mid))r=mid;
 	 	else l=mid;
	  }
	  cout<<r;
 	 
	return 0;	
}
py： 
import sys
from cmath import inf, sqrt
from functools import lru_cache

from sys import stdin
from collections import deque
from collections import defaultdict
sys.setrecursionlimit(1000000000)
ans=0
m,n=list(map(int,input().split()))
v=[]
d=[]
x0=y0=0
dis=[[1,0],[-1,0],[0,1],[0,-1]]
st=[[0]*1000 for _ in range(1000)]
def bfs(mid):
    q=deque()
    cnt=1
    st = [[0] * 1000 for _ in range(1000)]
    q.append([x0,y0])
    st[x0][y0]=1
    while(q):
        cur=q.popleft()
        for i in dis:
            nx,ny=cur[0]+i[0],cur[1]+i[1]
            if(nx<0 or ny<0 or nx>=m or ny>=n):continue
            if(st[nx][ny]):continue
            if(abs(v[cur[0]][cur[1]]-v[nx][ny])>mid):continue
            st[nx][ny]=1
            q.append([nx,ny])
            cnt+=d[nx][ny]
            if(cnt==ans):return 1
    return 0

for i in range(m):
    v.append(list(map(int,input().split())))
for i in range(m):
    d.append(list(map(int,input().split())))
for i in range(m):
    for j in range(n):
        ans+=d[i][j]
        if(d[i][j]):
            x0,y0=i,j
l=-1
r=1e9+10
while(l+1<r):
    mid=(l+r)//2
    if(bfs(mid)):r=mid
    else :l=mid
print(int(r))









