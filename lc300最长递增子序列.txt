cpp：
class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n=nums.size();
        vector<int>memo(n+1,-1);
        auto f=[&](this auto&&f,int x)->int{
           
            if(x==0)return 1;
            int&ans=memo[x];
            if(ans!=-1)return ans;
            ans=0;
            for(int i=0;i<x;i++){
                if(nums[x]>nums[i])ans=max(ans,f(i));
            }
            ans+=1;
            return ans;
        };
        int ans=0;
        for(int i=0;i<n;i++){
            ans=max(ans,f(i));
        }
        return ans;
    }
};
py： （力扣是py最好的语言）
 
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        n=len(nums)
        @cache
        def f(x):
            if(x<0):return 0
            if(x==0):return 1
            ans=0
            for i in range(0,x):
                if(nums[x]>nums[i]):
                    ans=max(ans,f(i))
            ans+=1
            return ans
        ans=0
        for i in range(0,n):
            ans=max(ans,f(i))
        return ans




