cpp：
#include<bits/stdc++.h>
using namespace std;
#define int long long
typedef pair<int,int> PII; 
using ll=long long;
 
const int N=1e6+10,mod=1e5+3;
int n,m,k;
int zuo,you;
ll ans=0;
int v[N];
bool f(int x){
	if(x==1)return 0;
	
	for(int i=2;i*i<=x;i++){
		if(x%i==0)return 0;
	}
	return 1;
}
void dfs(int x,int sum,int geshu){
	if(x>=n||geshu==k){
		if(geshu==k)
		ans+=f(sum);
		return;
	}
	dfs(x+1,sum+v[x],geshu+1);
	dfs(x+1,sum,geshu);
}
signed main()
{	
	cin>>n>>k;
	for(int i=0;i<n;i++){
		cin>>v[i];
	} 
	dfs(0,0,0);
	cout<<ans;
	return 0;	
}
 
 

py： 
import sys
from cmath import inf, sqrt
from sys import stdin
from collections import deque
from collections import defaultdict
sys.setrecursionlimit(1000000000)
n,k=list(map(int,input().split()))
ans=0
v=list(map(int,input().split()))

def f(x):
    if(x==1):
        return 0
    for i in range(2,x):
        if(x%i==0):
            return 0
        if(i>(x**0.5)):break
    return  1
def dfs(x,sum,st):
    global ans
    if(x==k):
        if(f(sum)):
            ans+=1
    for i in range(st,n):
        dfs(x+1,sum+v[i],i+1)
dfs(0,0,0)
print(ans)

 





