cpp：
#include<bits/stdc++.h>
using namespace std;
#define int long long
typedef pair<int,int> PII; 
using ll=long long;
 
const int N=5000;
int n,m,k;
int zuo,you;
ll ans=0,sum=0;
int st[100010];
vector<ll>v,t,path;
int dis[4][2]={1,0,-1,0,0,1,0,-1};
string s; 
ll f(int a,int b,int i){
		if(s[i]=='+')return (a+b);
			else return a*b;
}
void dfs(int x){
	if(x>=4){
		t=path;
		//按照顺序算 
		for(int i=0;i<3;i++){
			int a=t.back();t.pop_back();
			int b=t.back();t.pop_back();
			if(s[i]=='+')t.push_back(a+b);
			else t.push_back(a*b);
		}
	  	//分两批算 
		ans=min(ans,t[0]);
		int a=f(path[0],path[1],0),b=f(path[2],path[3],1);
		ans=min(ans,f(a,b,2));
		return;
	}	
	for(int i=0;i<4;i++){
		if(!st[i]){
			st[i]=1;
			path.push_back(v[i]);
			dfs(x+1);
			path.pop_back();
			st[i]=0;
		}
	}
}
signed main()
{	ans=LLONG_MAX;
  	for(int i=0;i<4;i++){
  		int a;cin>>a;
  		v.push_back(a);
	  }
	  for(int i=0;i<3;i++){
	  	string a;
	  	cin>>a;
	  	s+=a;
	  }
	   
	  dfs(0);
	  cout<<ans;
	
	return 0;	
}
 
 
 
 
 

py： 

import sys
from cmath import inf
from sys import stdin
from collections import deque
from collections import defaultdict
sys.setrecursionlimit(1000000000)
v=list(map(int,input().split()))
path=[]
st=[0 for _ in range(10)]
s=list(input().split(" "))
ans=float(inf)
def f(a,b,i):
    if(s[i]=='+'):
        return  a+b
    return a*b
def dfs(x):
    global ans
    if(x>=4):
        a = f(path[0], path[1], 0)
        b = f(path[2], a, 1)
        ans = min(ans, f(b, path[3], 2))

        a=f(path[0],path[1],0)
        b=f(path[2],path[3],1)
        ans=min(ans,f(a,b,2))
        return
    for i in range(4):
        if(st[i]==0):
            st[i]=1
            path.append(v[i])
            dfs(x+1)
            path.pop()
            st[i]=0
dfs(0)
print(ans)








